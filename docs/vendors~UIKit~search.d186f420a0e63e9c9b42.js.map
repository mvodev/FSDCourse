{"version":3,"sources":["webpack:///../node_modules/webpack/buildin/amd-options.js","webpack:///../node_modules/ion-rangeslider/js/ion.rangeSlider.js"],"names":["module","exports","__webpack_amd_options__","factory","$","document","window","navigator","undefined","n","r","plugin_count","is_old_ie","userAgent","search","exec","toString","split","addClass","Function","prototype","bind","that","target","this","slice","TypeError","args","call","arguments","bound","F","self","result","apply","concat","Object","Array","indexOf","searchElement","fromIndex","k","O","len","length","Math","abs","Infinity","max","IonRangeSlider","input","options","VERSION","current_plugin","calc_count","update_tm","old_from","old_to","old_min_interval","raf_id","dragging","force_redraw","no_diapason","has_tab_index","is_key","is_update","is_start","is_finish","is_active","is_resize","is_click","$cache","win","body","cont","rs","min","from","to","single","bar","line","s_single","s_from","s_to","shad_single","shad_from","shad_to","edge","grid","grid_labels","coords","x_gap","x_pointer","w_rs","w_rs_old","w_handle","p_gap","p_gap_left","p_gap_right","p_step","p_pointer","p_handle","p_single_fake","p_single_real","p_from_fake","p_from_real","p_to_fake","p_to_real","p_bar_x","p_bar_w","grid_gap","big_num","big","big_w","big_p","big_x","labels","w_min","w_max","w_from","w_to","w_single","p_min","p_max","p_from_left","p_to_left","p_single_left","config","config_from_data","prop","$inp","val","skin","type","step","min_interval","max_interval","drag_interval","values","p_values","from_fixed","from_min","from_max","from_shadow","to_fixed","to_min","to_max","to_shadow","prettify_enabled","prettify_separator","prettify","force_edges","keyboard","grid_margin","grid_num","grid_snap","hide_min_max","hide_from_to","prefix","postfix","max_postfix","decorate_both","values_separator","input_values_separator","disable","block","extra_classes","scope","onStart","onChange","onFinish","onUpdate","nodeName","console","warn","data","hasOwnProperty","extend","update_check","validate","slider","from_percent","from_value","to_percent","to_value","init","convertToPercent","toggleInput","append","setMinMax","calc","callOnUpdate","callOnStart","updateScene","container_html","before","prev","html","find","style","visibility","setTopHandler","display","appendGrid","appendDisableMask","disabled","removeDisableMask","bindEvents","cursor","changeLevel","toFixed","removeClass","remove","off","cancelAnimationFrame","on","pointerMove","pointerUp","pointerClick","pointerFocus","pointerDown","key","e","x","$handle","offset","left","width","preventDefault","pageX","originalEvent","touches","restoreOriginalMinInterval","contains","callOnFinish","button","setTempMinInterval","calcPointerPercent","trigger","altKey","ctrlKey","shiftKey","metaKey","which","moveByKey","right","p","decorate","min_pretty","_prettify","max_pretty","outerWidth","interval","update","calcHandlePercent","handle_x","getHandleX","chooseHandle","w","f","t","checkDiapason","convertToFakePercent","convertToRealPercent","calcWithStep","checkMinInterval","checkMaxInterval","real_x","full","half","new_from","new_to","convertToValue","from_pretty","to_pretty","calcMinMax","calcLabels","isNaN","fake","real","checkEdges","clearTimeout","drawHandles","requestAnimationFrame","setTimeout","drawLabels","calcGridMargin","calcGridLabels","drawShadow","writeToInput","callOnChange","text_single","text_from","text_to","values_num","single_left","to_left","o","c","is_from_min","is_from_max","is_to_min","is_to_max","toggleClass","removeProp","value","no_min","percent","diapason","one_percent","min_length","max_length","min_decimals","max_decimals","avg_decimals","number","string","rounded","round","p_current","p_next","current","next","p_num","num","replace","i","v","vl","push","original","decorated","updateFrom","updateTo","updateResult","z","local_small_max","small_p","total","small_max","ceil","cacheGridLabels","$label","label","start","finish","calcGridCollision","Number","POSITIVE_INFINITY","marginLeft","next_i","reset","destroy","fn","ionRangeSlider","each","lastTime","vendors","callback","element","currTime","Date","getTime","timeToCall","id","jQuery"],"mappings":"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","file":"vendors~UIKit~search.d186f420a0e63e9c9b42.js","sourcesContent":["/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// Ion.RangeSlider\n// version 2.3.1 Build: 382\n// © Denis Ineshin, 2019\n// https://github.com/IonDen\n//\n// Project page:    http://ionden.com/a/plugins/ion.rangeSlider/en.html\n// GitHub page:     https://github.com/IonDen/ion.rangeSlider\n//\n// Released under MIT licence:\n// http://ionden.com/a/plugins/licence-en.html\n// =====================================================================================================================\n\n;(function(factory) {\n    if ((typeof jQuery === 'undefined' || !jQuery) && typeof define === \"function\" && define.amd) {\n        define([\"jquery\"], function (jQuery) {\n            return factory(jQuery, document, window, navigator);\n        });\n    } else if ((typeof jQuery === 'undefined' || !jQuery) && typeof exports === \"object\") {\n        factory(require(\"jquery\"), document, window, navigator);\n    } else {\n        factory(jQuery, document, window, navigator);\n    }\n} (function ($, document, window, navigator, undefined) {\n    \"use strict\";\n\n    // =================================================================================================================\n    // Service\n\n    var plugin_count = 0;\n\n    // IE8 fix\n    var is_old_ie = (function () {\n        var n = navigator.userAgent,\n            r = /msie\\s\\d+/i,\n            v;\n        if (n.search(r) > 0) {\n            v = r.exec(n).toString();\n            v = v.split(\" \")[1];\n            if (v < 9) {\n                $(\"html\").addClass(\"lt-ie9\");\n                return true;\n            }\n        }\n        return false;\n    } ());\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n            var slice = [].slice;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function () {\n\n                    if (this instanceof bound) {\n\n                        var F = function(){};\n                        F.prototype = target.prototype;\n                        var self = new F();\n\n                        var result = target.apply(\n                            self,\n                            args.concat(slice.call(arguments))\n                        );\n                        if (Object(result) === result) {\n                            return result;\n                        }\n                        return self;\n\n                    } else {\n\n                        return target.apply(\n                            that,\n                            args.concat(slice.call(arguments))\n                        );\n\n                    }\n\n                };\n\n            return bound;\n        };\n    }\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function(searchElement, fromIndex) {\n            var k;\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var O = Object(this);\n            var len = O.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = +fromIndex || 0;\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n            if (n >= len) {\n                return -1;\n            }\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n                k++;\n            }\n            return -1;\n        };\n    }\n\n\n\n    // =================================================================================================================\n    // Template\n\n    var base_html =\n        '<span class=\"irs\">' +\n        '<span class=\"irs-line\" tabindex=\"0\"></span>' +\n        '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' +\n        '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' +\n        '</span>' +\n        '<span class=\"irs-grid\"></span>';\n\n    var single_html =\n        '<span class=\"irs-bar irs-bar--single\"></span>' +\n        '<span class=\"irs-shadow shadow-single\"></span>' +\n        '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\n\n    var double_html =\n        '<span class=\"irs-bar\"></span>' +\n        '<span class=\"irs-shadow shadow-from\"></span>' +\n        '<span class=\"irs-shadow shadow-to\"></span>' +\n        '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' +\n        '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\n\n    var disable_html =\n        '<span class=\"irs-disable-mask\"></span>';\n\n\n\n    // =================================================================================================================\n    // Core\n\n    /**\n     * Main plugin constructor\n     *\n     * @param input {Object} link to base input element\n     * @param options {Object} slider config\n     * @param plugin_count {Number}\n     * @constructor\n     */\n    var IonRangeSlider = function (input, options, plugin_count) {\n        this.VERSION = \"2.3.1\";\n        this.input = input;\n        this.plugin_count = plugin_count;\n        this.current_plugin = 0;\n        this.calc_count = 0;\n        this.update_tm = 0;\n        this.old_from = 0;\n        this.old_to = 0;\n        this.old_min_interval = null;\n        this.raf_id = null;\n        this.dragging = false;\n        this.force_redraw = false;\n        this.no_diapason = false;\n        this.has_tab_index = true;\n        this.is_key = false;\n        this.is_update = false;\n        this.is_start = true;\n        this.is_finish = false;\n        this.is_active = false;\n        this.is_resize = false;\n        this.is_click = false;\n\n        options = options || {};\n\n        // cache for links to all DOM elements\n        this.$cache = {\n            win: $(window),\n            body: $(document.body),\n            input: $(input),\n            cont: null,\n            rs: null,\n            min: null,\n            max: null,\n            from: null,\n            to: null,\n            single: null,\n            bar: null,\n            line: null,\n            s_single: null,\n            s_from: null,\n            s_to: null,\n            shad_single: null,\n            shad_from: null,\n            shad_to: null,\n            edge: null,\n            grid: null,\n            grid_labels: []\n        };\n\n        // storage for measure variables\n        this.coords = {\n            // left\n            x_gap: 0,\n            x_pointer: 0,\n\n            // width\n            w_rs: 0,\n            w_rs_old: 0,\n            w_handle: 0,\n\n            // percents\n            p_gap: 0,\n            p_gap_left: 0,\n            p_gap_right: 0,\n            p_step: 0,\n            p_pointer: 0,\n            p_handle: 0,\n            p_single_fake: 0,\n            p_single_real: 0,\n            p_from_fake: 0,\n            p_from_real: 0,\n            p_to_fake: 0,\n            p_to_real: 0,\n            p_bar_x: 0,\n            p_bar_w: 0,\n\n            // grid\n            grid_gap: 0,\n            big_num: 0,\n            big: [],\n            big_w: [],\n            big_p: [],\n            big_x: []\n        };\n\n        // storage for labels measure variables\n        this.labels = {\n            // width\n            w_min: 0,\n            w_max: 0,\n            w_from: 0,\n            w_to: 0,\n            w_single: 0,\n\n            // percents\n            p_min: 0,\n            p_max: 0,\n            p_from_fake: 0,\n            p_from_left: 0,\n            p_to_fake: 0,\n            p_to_left: 0,\n            p_single_fake: 0,\n            p_single_left: 0\n        };\n\n\n\n        /**\n         * get and validate config\n         */\n        var $inp = this.$cache.input,\n            val = $inp.prop(\"value\"),\n            config, config_from_data, prop;\n\n        // default config\n        config = {\n            skin: \"flat\",\n            type: \"single\",\n\n            min: 10,\n            max: 100,\n            from: null,\n            to: null,\n            step: 1,\n\n            min_interval: 0,\n            max_interval: 0,\n            drag_interval: false,\n\n            values: [],\n            p_values: [],\n\n            from_fixed: false,\n            from_min: null,\n            from_max: null,\n            from_shadow: false,\n\n            to_fixed: false,\n            to_min: null,\n            to_max: null,\n            to_shadow: false,\n\n            prettify_enabled: true,\n            prettify_separator: \" \",\n            prettify: null,\n\n            force_edges: false,\n\n            keyboard: true,\n\n            grid: false,\n            grid_margin: true,\n            grid_num: 4,\n            grid_snap: false,\n\n            hide_min_max: false,\n            hide_from_to: false,\n\n            prefix: \"\",\n            postfix: \"\",\n            max_postfix: \"\",\n            decorate_both: true,\n            values_separator: \" — \",\n\n            input_values_separator: \";\",\n\n            disable: false,\n            block: false,\n\n            extra_classes: \"\",\n\n            scope: null,\n            onStart: null,\n            onChange: null,\n            onFinish: null,\n            onUpdate: null\n        };\n\n\n        // check if base element is input\n        if ($inp[0].nodeName !== \"INPUT\") {\n            console && console.warn && console.warn(\"Base element should be <input>!\", $inp[0]);\n        }\n\n\n        // config from data-attributes extends js config\n        config_from_data = {\n            skin: $inp.data(\"skin\"),\n            type: $inp.data(\"type\"),\n\n            min: $inp.data(\"min\"),\n            max: $inp.data(\"max\"),\n            from: $inp.data(\"from\"),\n            to: $inp.data(\"to\"),\n            step: $inp.data(\"step\"),\n\n            min_interval: $inp.data(\"minInterval\"),\n            max_interval: $inp.data(\"maxInterval\"),\n            drag_interval: $inp.data(\"dragInterval\"),\n\n            values: $inp.data(\"values\"),\n\n            from_fixed: $inp.data(\"fromFixed\"),\n            from_min: $inp.data(\"fromMin\"),\n            from_max: $inp.data(\"fromMax\"),\n            from_shadow: $inp.data(\"fromShadow\"),\n\n            to_fixed: $inp.data(\"toFixed\"),\n            to_min: $inp.data(\"toMin\"),\n            to_max: $inp.data(\"toMax\"),\n            to_shadow: $inp.data(\"toShadow\"),\n\n            prettify_enabled: $inp.data(\"prettifyEnabled\"),\n            prettify_separator: $inp.data(\"prettifySeparator\"),\n\n            force_edges: $inp.data(\"forceEdges\"),\n\n            keyboard: $inp.data(\"keyboard\"),\n\n            grid: $inp.data(\"grid\"),\n            grid_margin: $inp.data(\"gridMargin\"),\n            grid_num: $inp.data(\"gridNum\"),\n            grid_snap: $inp.data(\"gridSnap\"),\n\n            hide_min_max: $inp.data(\"hideMinMax\"),\n            hide_from_to: $inp.data(\"hideFromTo\"),\n\n            prefix: $inp.data(\"prefix\"),\n            postfix: $inp.data(\"postfix\"),\n            max_postfix: $inp.data(\"maxPostfix\"),\n            decorate_both: $inp.data(\"decorateBoth\"),\n            values_separator: $inp.data(\"valuesSeparator\"),\n\n            input_values_separator: $inp.data(\"inputValuesSeparator\"),\n\n            disable: $inp.data(\"disable\"),\n            block: $inp.data(\"block\"),\n\n            extra_classes: $inp.data(\"extraClasses\"),\n        };\n        config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\n\n        for (prop in config_from_data) {\n            if (config_from_data.hasOwnProperty(prop)) {\n                if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\n                    delete config_from_data[prop];\n                }\n            }\n        }\n\n\n        // input value extends default config\n        if (val !== undefined && val !== \"\") {\n            val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\n\n            if (val[0] && val[0] == +val[0]) {\n                val[0] = +val[0];\n            }\n            if (val[1] && val[1] == +val[1]) {\n                val[1] = +val[1];\n            }\n\n            if (options && options.values && options.values.length) {\n                config.from = val[0] && options.values.indexOf(val[0]);\n                config.to = val[1] && options.values.indexOf(val[1]);\n            } else {\n                config.from = val[0] && +val[0];\n                config.to = val[1] && +val[1];\n            }\n        }\n\n\n\n        // js config extends default config\n        $.extend(config, options);\n\n\n        // data config extends config\n        $.extend(config, config_from_data);\n        this.options = config;\n\n\n\n        // validate config, to be sure that all data types are correct\n        this.update_check = {};\n        this.validate();\n\n\n\n        // default result object, returned to callbacks\n        this.result = {\n            input: this.$cache.input,\n            slider: null,\n\n            min: this.options.min,\n            max: this.options.max,\n\n            from: this.options.from,\n            from_percent: 0,\n            from_value: null,\n\n            to: this.options.to,\n            to_percent: 0,\n            to_value: null\n        };\n\n\n\n        this.init();\n    };\n\n    IonRangeSlider.prototype = {\n\n        /**\n         * Starts or updates the plugin instance\n         *\n         * @param [is_update] {boolean}\n         */\n        init: function (is_update) {\n            this.no_diapason = false;\n            this.coords.p_step = this.convertToPercent(this.options.step, true);\n\n            this.target = \"base\";\n\n            this.toggleInput();\n            this.append();\n            this.setMinMax();\n\n            if (is_update) {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnUpdate();\n            } else {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnStart();\n            }\n\n            this.updateScene();\n        },\n\n        /**\n         * Appends slider template to a DOM\n         */\n        append: function () {\n            var container_html = '<span class=\"irs irs--' + this.options.skin + ' js-irs-' + this.plugin_count + ' ' + this.options.extra_classes + '\"></span>';\n            this.$cache.input.before(container_html);\n            this.$cache.input.prop(\"readonly\", true);\n            this.$cache.cont = this.$cache.input.prev();\n            this.result.slider = this.$cache.cont;\n\n            this.$cache.cont.html(base_html);\n            this.$cache.rs = this.$cache.cont.find(\".irs\");\n            this.$cache.min = this.$cache.cont.find(\".irs-min\");\n            this.$cache.max = this.$cache.cont.find(\".irs-max\");\n            this.$cache.from = this.$cache.cont.find(\".irs-from\");\n            this.$cache.to = this.$cache.cont.find(\".irs-to\");\n            this.$cache.single = this.$cache.cont.find(\".irs-single\");\n            this.$cache.line = this.$cache.cont.find(\".irs-line\");\n            this.$cache.grid = this.$cache.cont.find(\".irs-grid\");\n\n            if (this.options.type === \"single\") {\n                this.$cache.cont.append(single_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.edge = this.$cache.cont.find(\".irs-bar-edge\");\n                this.$cache.s_single = this.$cache.cont.find(\".single\");\n                this.$cache.from[0].style.visibility = \"hidden\";\n                this.$cache.to[0].style.visibility = \"hidden\";\n                this.$cache.shad_single = this.$cache.cont.find(\".shadow-single\");\n            } else {\n                this.$cache.cont.append(double_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.s_from = this.$cache.cont.find(\".from\");\n                this.$cache.s_to = this.$cache.cont.find(\".to\");\n                this.$cache.shad_from = this.$cache.cont.find(\".shadow-from\");\n                this.$cache.shad_to = this.$cache.cont.find(\".shadow-to\");\n\n                this.setTopHandler();\n            }\n\n            if (this.options.hide_from_to) {\n                this.$cache.from[0].style.display = \"none\";\n                this.$cache.to[0].style.display = \"none\";\n                this.$cache.single[0].style.display = \"none\";\n            }\n\n            this.appendGrid();\n\n            if (this.options.disable) {\n                this.appendDisableMask();\n                this.$cache.input[0].disabled = true;\n            } else {\n                this.$cache.input[0].disabled = false;\n                this.removeDisableMask();\n                this.bindEvents();\n            }\n\n            // block only if not disabled\n            if (!this.options.disable) {\n                if (this.options.block) {\n                    this.appendDisableMask();\n                } else {\n                    this.removeDisableMask();\n                }\n            }\n\n            if (this.options.drag_interval) {\n                this.$cache.bar[0].style.cursor = \"ew-resize\";\n            }\n        },\n\n        /**\n         * Determine which handler has a priority\n         * works only for double slider type\n         */\n        setTopHandler: function () {\n            var min = this.options.min,\n                max = this.options.max,\n                from = this.options.from,\n                to = this.options.to;\n\n            if (from > min && to === max) {\n                this.$cache.s_from.addClass(\"type_last\");\n            } else if (to < max) {\n                this.$cache.s_to.addClass(\"type_last\");\n            }\n        },\n\n        /**\n         * Determine which handles was clicked last\n         * and which handler should have hover effect\n         *\n         * @param target {String}\n         */\n        changeLevel: function (target) {\n            switch (target) {\n                case \"single\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake);\n                    this.$cache.s_single.addClass(\"state_hover\");\n                    break;\n                case \"from\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.$cache.s_from.addClass(\"state_hover\");\n                    this.$cache.s_from.addClass(\"type_last\");\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    break;\n                case \"to\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake);\n                    this.$cache.s_to.addClass(\"state_hover\");\n                    this.$cache.s_to.addClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n                case \"both\":\n                    this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer);\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n            }\n        },\n\n        /**\n         * Then slider is disabled\n         * appends extra layer with opacity\n         */\n        appendDisableMask: function () {\n            this.$cache.cont.append(disable_html);\n            this.$cache.cont.addClass(\"irs-disabled\");\n        },\n\n        /**\n         * Then slider is not disabled\n         * remove disable mask\n         */\n        removeDisableMask: function () {\n            this.$cache.cont.remove(\".irs-disable-mask\");\n            this.$cache.cont.removeClass(\"irs-disabled\");\n        },\n\n        /**\n         * Remove slider instance\n         * and unbind all events\n         */\n        remove: function () {\n            this.$cache.cont.remove();\n            this.$cache.cont = null;\n\n            this.$cache.line.off(\"keydown.irs_\" + this.plugin_count);\n\n            this.$cache.body.off(\"touchmove.irs_\" + this.plugin_count);\n            this.$cache.body.off(\"mousemove.irs_\" + this.plugin_count);\n\n            this.$cache.win.off(\"touchend.irs_\" + this.plugin_count);\n            this.$cache.win.off(\"mouseup.irs_\" + this.plugin_count);\n\n            if (is_old_ie) {\n                this.$cache.body.off(\"mouseup.irs_\" + this.plugin_count);\n                this.$cache.body.off(\"mouseleave.irs_\" + this.plugin_count);\n            }\n\n            this.$cache.grid_labels = [];\n            this.coords.big = [];\n            this.coords.big_w = [];\n            this.coords.big_p = [];\n            this.coords.big_x = [];\n\n            cancelAnimationFrame(this.raf_id);\n        },\n\n        /**\n         * bind all slider events\n         */\n        bindEvents: function () {\n            if (this.no_diapason) {\n                return;\n            }\n\n            this.$cache.body.on(\"touchmove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n            this.$cache.body.on(\"mousemove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n\n            this.$cache.win.on(\"touchend.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            this.$cache.win.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n\n            this.$cache.line.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            this.$cache.line.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n            this.$cache.line.on(\"focus.irs_\" + this.plugin_count, this.pointerFocus.bind(this));\n\n            if (this.options.drag_interval && this.options.type === \"double\") {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n            } else {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.type === \"single\") {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.shad_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.edge.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            } else {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n\n                this.$cache.from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.keyboard) {\n                this.$cache.line.on(\"keydown.irs_\" + this.plugin_count, this.key.bind(this, \"keyboard\"));\n            }\n\n            if (is_old_ie) {\n                this.$cache.body.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n                this.$cache.body.on(\"mouseleave.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            }\n        },\n\n        /**\n         * Focus with tabIndex\n         *\n         * @param e {Object} event object\n         */\n        pointerFocus: function (e) {\n            if (!this.target) {\n                var x;\n                var $handle;\n\n                if (this.options.type === \"single\") {\n                    $handle = this.$cache.single;\n                } else {\n                    $handle = this.$cache.from;\n                }\n\n                x = $handle.offset().left;\n                x += ($handle.width() / 2) - 1;\n\n                this.pointerClick(\"single\", {preventDefault: function () {}, pageX: x});\n            }\n        },\n\n        /**\n         * Mousemove or touchmove\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerMove: function (e) {\n            if (!this.dragging) {\n                return;\n            }\n\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calc();\n        },\n\n        /**\n         * Mouseup or touchend\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerUp: function (e) {\n            if (this.current_plugin !== this.plugin_count) {\n                return;\n            }\n\n            if (this.is_active) {\n                this.is_active = false;\n            } else {\n                return;\n            }\n\n            this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\");\n\n            this.force_redraw = true;\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", false);\n            }\n\n            this.updateScene();\n            this.restoreOriginalMinInterval();\n\n            // callbacks call\n            if ($.contains(this.$cache.cont[0], e.target) || this.dragging) {\n                this.callOnFinish();\n            }\n\n            this.dragging = false;\n        },\n\n        /**\n         * Mousedown or touchstart\n         * only for handlers\n         *\n         * @param target {String|null}\n         * @param e {Object} event object\n         */\n        pointerDown: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            if (target === \"both\") {\n                this.setTempMinInterval();\n            }\n\n            if (!target) {\n                target = this.target || \"from\";\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_active = true;\n            this.dragging = true;\n\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calcPointerPercent();\n            this.changeLevel(target);\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", true);\n            }\n\n            this.$cache.line.trigger(\"focus\");\n\n            this.updateScene();\n        },\n\n        /**\n         * Mousedown or touchstart\n         * for other slider elements, like diapason line\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         */\n        pointerClick: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_click = true;\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = +(x - this.coords.x_gap).toFixed();\n\n            this.force_redraw = true;\n            this.calc();\n\n            this.$cache.line.trigger(\"focus\");\n        },\n\n        /**\n         * Keyborard controls for focused slider\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         * @returns {boolean|undefined}\n         */\n        key: function (target, e) {\n            if (this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n                return;\n            }\n\n            switch (e.which) {\n                case 83: // W\n                case 65: // A\n                case 40: // DOWN\n                case 37: // LEFT\n                    e.preventDefault();\n                    this.moveByKey(false);\n                    break;\n\n                case 87: // S\n                case 68: // D\n                case 38: // UP\n                case 39: // RIGHT\n                    e.preventDefault();\n                    this.moveByKey(true);\n                    break;\n            }\n\n            return true;\n        },\n\n        /**\n         * Move by key\n         *\n         * @param right {boolean} direction to move\n         */\n        moveByKey: function (right) {\n            var p = this.coords.p_pointer;\n            var p_step = (this.options.max - this.options.min) / 100;\n            p_step = this.options.step / p_step;\n\n            if (right) {\n                p += p_step;\n            } else {\n                p -= p_step;\n            }\n\n            this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p);\n            this.is_key = true;\n            this.calc();\n        },\n\n        /**\n         * Set visibility and content\n         * of Min and Max labels\n         */\n        setMinMax: function () {\n            if (!this.options) {\n                return;\n            }\n\n            if (this.options.hide_min_max) {\n                this.$cache.min[0].style.display = \"none\";\n                this.$cache.max[0].style.display = \"none\";\n                return;\n            }\n\n            if (this.options.values.length) {\n                this.$cache.min.html(this.decorate(this.options.p_values[this.options.min]));\n                this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));\n            } else {\n                var min_pretty = this._prettify(this.options.min);\n                var max_pretty = this._prettify(this.options.max);\n\n                this.result.min_pretty = min_pretty;\n                this.result.max_pretty = max_pretty;\n\n                this.$cache.min.html(this.decorate(min_pretty, this.options.min));\n                this.$cache.max.html(this.decorate(max_pretty, this.options.max));\n            }\n\n            this.labels.w_min = this.$cache.min.outerWidth(false);\n            this.labels.w_max = this.$cache.max.outerWidth(false);\n        },\n\n        /**\n         * Then dragging interval, prevent interval collapsing\n         * using min_interval option\n         */\n        setTempMinInterval: function () {\n            var interval = this.result.to - this.result.from;\n\n            if (this.old_min_interval === null) {\n                this.old_min_interval = this.options.min_interval;\n            }\n\n            this.options.min_interval = interval;\n        },\n\n        /**\n         * Restore min_interval option to original\n         */\n        restoreOriginalMinInterval: function () {\n            if (this.old_min_interval !== null) {\n                this.options.min_interval = this.old_min_interval;\n                this.old_min_interval = null;\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Calculations\n\n        /**\n         * All calculations and measures start here\n         *\n         * @param update {boolean=}\n         */\n        calc: function (update) {\n            if (!this.options) {\n                return;\n            }\n\n            this.calc_count++;\n\n            if (this.calc_count === 10 || update) {\n                this.calc_count = 0;\n                this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n                this.calcHandlePercent();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.calcPointerPercent();\n            var handle_x = this.getHandleX();\n\n\n            if (this.target === \"both\") {\n                this.coords.p_gap = 0;\n                handle_x = this.getHandleX();\n            }\n\n            if (this.target === \"click\") {\n                this.coords.p_gap = this.coords.p_handle / 2;\n                handle_x = this.getHandleX();\n\n                if (this.options.drag_interval) {\n                    this.target = \"both_one\";\n                } else {\n                    this.target = this.chooseHandle(handle_x);\n                }\n            }\n\n            switch (this.target) {\n                case \"base\":\n                    var w = (this.options.max - this.options.min) / 100,\n                        f = (this.result.from - this.options.min) / w,\n                        t = (this.result.to - this.options.min) / w;\n\n                    this.coords.p_single_real = this.toFixed(f);\n                    this.coords.p_from_real = this.toFixed(f);\n                    this.coords.p_to_real = this.toFixed(t);\n\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    this.target = null;\n\n                    break;\n\n                case \"single\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_single_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real);\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n\n                    break;\n\n                case \"from\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    if (this.coords.p_from_real > this.coords.p_to_real) {\n                        this.coords.p_from_real = this.coords.p_to_real;\n                    }\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    break;\n\n                case \"to\":\n                    if (this.options.to_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    if (this.coords.p_to_real < this.coords.p_from_real) {\n                        this.coords.p_to_real = this.coords.p_from_real;\n                    }\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    handle_x = this.toFixed(handle_x + (this.coords.p_handle * 0.001));\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left;\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right;\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both_one\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    var real_x = this.convertToRealPercent(handle_x),\n                        from = this.result.from_percent,\n                        to = this.result.to_percent,\n                        full = to - from,\n                        half = full / 2,\n                        new_from = real_x - half,\n                        new_to = real_x + half;\n\n                    if (new_from < 0) {\n                        new_from = 0;\n                        new_to = new_from + full;\n                    }\n\n                    if (new_to > 100) {\n                        new_to = 100;\n                        new_from = new_to - full;\n                    }\n\n                    this.coords.p_from_real = this.calcWithStep(new_from);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.calcWithStep(new_to);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.p_bar_x = (this.coords.p_handle / 2);\n                this.coords.p_bar_w = this.coords.p_single_fake;\n\n                this.result.from_percent = this.coords.p_single_real;\n                this.result.from = this.convertToValue(this.coords.p_single_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                }\n            } else {\n                this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + (this.coords.p_handle / 2));\n                this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake);\n\n                this.result.from_percent = this.coords.p_from_real;\n                this.result.from = this.convertToValue(this.coords.p_from_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n                this.result.to_percent = this.coords.p_to_real;\n                this.result.to = this.convertToValue(this.coords.p_to_real);\n                this.result.to_pretty = this._prettify(this.result.to);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                    this.result.to_value = this.options.values[this.result.to];\n                }\n            }\n\n            this.calcMinMax();\n            this.calcLabels();\n        },\n\n\n        /**\n         * calculates pointer X in percent\n         */\n        calcPointerPercent: function () {\n            if (!this.coords.w_rs) {\n                this.coords.p_pointer = 0;\n                return;\n            }\n\n            if (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer)  ) {\n                this.coords.x_pointer = 0;\n            } else if (this.coords.x_pointer > this.coords.w_rs) {\n                this.coords.x_pointer = this.coords.w_rs;\n            }\n\n            this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100);\n        },\n\n        convertToRealPercent: function (fake) {\n            var full = 100 - this.coords.p_handle;\n            return fake / full * 100;\n        },\n\n        convertToFakePercent: function (real) {\n            var full = 100 - this.coords.p_handle;\n            return real / 100 * full;\n        },\n\n        getHandleX: function () {\n            var max = 100 - this.coords.p_handle,\n                x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);\n\n            if (x < 0) {\n                x = 0;\n            } else if (x > max) {\n                x = max;\n            }\n\n            return x;\n        },\n\n        calcHandlePercent: function () {\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n\n            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n        },\n\n        /**\n         * Find closest handle to pointer click\n         *\n         * @param real_x {Number}\n         * @returns {String}\n         */\n        chooseHandle: function (real_x) {\n            if (this.options.type === \"single\") {\n                return \"single\";\n            } else {\n                var m_point = this.coords.p_from_real + ((this.coords.p_to_real - this.coords.p_from_real) / 2);\n                if (real_x >= m_point) {\n                    return this.options.to_fixed ? \"from\" : \"to\";\n                } else {\n                    return this.options.from_fixed ? \"to\" : \"from\";\n                }\n            }\n        },\n\n        /**\n         * Measure Min and Max labels width in percent\n         */\n        calcMinMax: function () {\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100;\n            this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100;\n        },\n\n        /**\n         * Measure labels width and X in percent\n         */\n        calcLabels: function () {\n            if (!this.coords.w_rs || this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = this.coords.p_single_fake + (this.coords.p_handle / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            } else {\n\n                this.labels.w_from = this.$cache.from.outerWidth(false);\n                this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100;\n                this.labels.p_from_left = this.coords.p_from_fake + (this.coords.p_handle / 2) - (this.labels.p_from_fake / 2);\n                this.labels.p_from_left = this.toFixed(this.labels.p_from_left);\n                this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake);\n\n                this.labels.w_to = this.$cache.to.outerWidth(false);\n                this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100;\n                this.labels.p_to_left = this.coords.p_to_fake + (this.coords.p_handle / 2) - (this.labels.p_to_fake / 2);\n                this.labels.p_to_left = this.toFixed(this.labels.p_to_left);\n                this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake);\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = ((this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.toFixed(this.labels.p_single_left);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Drawings\n\n        /**\n         * Main function called in request animation frame\n         * to update everything\n         */\n        updateScene: function () {\n            if (this.raf_id) {\n                cancelAnimationFrame(this.raf_id);\n                this.raf_id = null;\n            }\n\n            clearTimeout(this.update_tm);\n            this.update_tm = null;\n\n            if (!this.options) {\n                return;\n            }\n\n            this.drawHandles();\n\n            if (this.is_active) {\n                this.raf_id = requestAnimationFrame(this.updateScene.bind(this));\n            } else {\n                this.update_tm = setTimeout(this.updateScene.bind(this), 300);\n            }\n        },\n\n        /**\n         * Draw handles\n         */\n        drawHandles: function () {\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old) {\n                this.target = \"base\";\n                this.is_resize = true;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old || this.force_redraw) {\n                this.setMinMax();\n                this.calc(true);\n                this.drawLabels();\n                if (this.options.grid) {\n                    this.calcGridMargin();\n                    this.calcGridLabels();\n                }\n                this.force_redraw = true;\n                this.coords.w_rs_old = this.coords.w_rs;\n                this.drawShadow();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (!this.dragging && !this.force_redraw && !this.is_key) {\n                return;\n            }\n\n            if (this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) {\n\n                this.drawLabels();\n\n                this.$cache.bar[0].style.left = this.coords.p_bar_x + \"%\";\n                this.$cache.bar[0].style.width = this.coords.p_bar_w + \"%\";\n\n                if (this.options.type === \"single\") {\n                    this.$cache.bar[0].style.left = 0;\n                    this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + \"%\";\n\n                    this.$cache.s_single[0].style.left = this.coords.p_single_fake + \"%\";\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                } else {\n                    this.$cache.s_from[0].style.left = this.coords.p_from_fake + \"%\";\n                    this.$cache.s_to[0].style.left = this.coords.p_to_fake + \"%\";\n\n                    if (this.old_from !== this.result.from || this.force_redraw) {\n                        this.$cache.from[0].style.left = this.labels.p_from_left + \"%\";\n                    }\n                    if (this.old_to !== this.result.to || this.force_redraw) {\n                        this.$cache.to[0].style.left = this.labels.p_to_left + \"%\";\n                    }\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                }\n\n                this.writeToInput();\n\n                if ((this.old_from !== this.result.from || this.old_to !== this.result.to) && !this.is_start) {\n                    this.$cache.input.trigger(\"change\");\n                    this.$cache.input.trigger(\"input\");\n                }\n\n                this.old_from = this.result.from;\n                this.old_to = this.result.to;\n\n                // callbacks call\n                if (!this.is_resize && !this.is_update && !this.is_start && !this.is_finish) {\n                    this.callOnChange();\n                }\n                if (this.is_key || this.is_click) {\n                    this.is_key = false;\n                    this.is_click = false;\n                    this.callOnFinish();\n                }\n\n                this.is_update = false;\n                this.is_resize = false;\n                this.is_finish = false;\n            }\n\n            this.is_start = false;\n            this.is_key = false;\n            this.is_click = false;\n            this.force_redraw = false;\n        },\n\n        /**\n         * Draw labels\n         * measure labels collisions\n         * collapse close labels\n         */\n        drawLabels: function () {\n            if (!this.options) {\n                return;\n            }\n\n            var values_num = this.options.values.length;\n            var p_values = this.options.p_values;\n            var text_single;\n            var text_from;\n            var text_to;\n            var from_pretty;\n            var to_pretty;\n\n            if (this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                if (values_num) {\n                    text_single = this.decorate(p_values[this.result.from]);\n                    this.$cache.single.html(text_single);\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n\n                    text_single = this.decorate(from_pretty, this.result.from);\n                    this.$cache.single.html(text_single);\n                }\n\n                this.calcLabels();\n\n                if (this.labels.p_single_left < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            } else {\n\n                if (values_num) {\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(p_values[this.result.from]);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(p_values[this.result.to]);\n                    } else {\n                        text_single = this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]);\n                    }\n                    text_from = this.decorate(p_values[this.result.from]);\n                    text_to = this.decorate(p_values[this.result.to]);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n                    to_pretty = this._prettify(this.result.to);\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(from_pretty, this.result.from);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(to_pretty, this.result.to);\n                    } else {\n                        text_single = this.decorate(from_pretty + this.options.values_separator + to_pretty, this.result.to);\n                    }\n                    text_from = this.decorate(from_pretty, this.result.from);\n                    text_to = this.decorate(to_pretty, this.result.to);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                }\n\n                this.calcLabels();\n\n                var min = Math.min(this.labels.p_single_left, this.labels.p_from_left),\n                    single_left = this.labels.p_single_left + this.labels.p_single_fake,\n                    to_left = this.labels.p_to_left + this.labels.p_to_fake,\n                    max = Math.max(single_left, to_left);\n\n                if (this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left) {\n                    this.$cache.from[0].style.visibility = \"hidden\";\n                    this.$cache.to[0].style.visibility = \"hidden\";\n                    this.$cache.single[0].style.visibility = \"visible\";\n\n                    if (this.result.from === this.result.to) {\n                        if (this.target === \"from\") {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        } else if (this.target === \"to\") {\n                            this.$cache.to[0].style.visibility = \"visible\";\n                        } else if (!this.target) {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        }\n                        this.$cache.single[0].style.visibility = \"hidden\";\n                        max = to_left;\n                    } else {\n                        this.$cache.from[0].style.visibility = \"hidden\";\n                        this.$cache.to[0].style.visibility = \"hidden\";\n                        this.$cache.single[0].style.visibility = \"visible\";\n                        max = Math.max(single_left, to_left);\n                    }\n                } else {\n                    this.$cache.from[0].style.visibility = \"visible\";\n                    this.$cache.to[0].style.visibility = \"visible\";\n                    this.$cache.single[0].style.visibility = \"hidden\";\n                }\n\n                if (min < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (max > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            }\n        },\n\n        /**\n         * Draw shadow intervals\n         */\n        drawShadow: function () {\n            var o = this.options,\n                c = this.$cache,\n\n                is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\n                is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\n                is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\n                is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max),\n\n                from_min,\n                from_max,\n                to_min,\n                to_max;\n\n            if (o.type === \"single\") {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_single[0].style.display = \"block\";\n                    c.shad_single[0].style.left = from_min + \"%\";\n                    c.shad_single[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_single[0].style.display = \"none\";\n                }\n            } else {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_from[0].style.display = \"block\";\n                    c.shad_from[0].style.left = from_min + \"%\";\n                    c.shad_from[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_from[0].style.display = \"none\";\n                }\n\n                if (o.to_shadow && (is_to_min || is_to_max)) {\n                    to_min = this.convertToPercent(is_to_min ? o.to_min : o.min);\n                    to_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\n                    to_min = this.toFixed(to_min - (this.coords.p_handle / 100 * to_min));\n                    to_max = this.toFixed(to_max - (this.coords.p_handle / 100 * to_max));\n                    to_min = to_min + (this.coords.p_handle / 2);\n\n                    c.shad_to[0].style.display = \"block\";\n                    c.shad_to[0].style.left = to_min + \"%\";\n                    c.shad_to[0].style.width = to_max + \"%\";\n                } else {\n                    c.shad_to[0].style.display = \"none\";\n                }\n            }\n        },\n\n\n\n        /**\n         * Write values to input element\n         */\n        writeToInput: function () {\n            if (this.options.type === \"single\") {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n            } else {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value + this.options.input_values_separator + this.result.to_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from + this.options.input_values_separator + this.result.to);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n                this.$cache.input.data(\"to\", this.result.to);\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Callbacks\n\n        callOnStart: function () {\n            this.writeToInput();\n\n            if (this.options.onStart && typeof this.options.onStart === \"function\") {\n                if (this.options.scope) {\n                    this.options.onStart.call(this.options.scope, this.result);\n                } else {\n                    this.options.onStart(this.result);\n                }\n            }\n        },\n        callOnChange: function () {\n            this.writeToInput();\n\n            if (this.options.onChange && typeof this.options.onChange === \"function\") {\n                if (this.options.scope) {\n                    this.options.onChange.call(this.options.scope, this.result);\n                } else {\n                    this.options.onChange(this.result);\n                }\n            }\n        },\n        callOnFinish: function () {\n            this.writeToInput();\n\n            if (this.options.onFinish && typeof this.options.onFinish === \"function\") {\n                if (this.options.scope) {\n                    this.options.onFinish.call(this.options.scope, this.result);\n                } else {\n                    this.options.onFinish(this.result);\n                }\n            }\n        },\n        callOnUpdate: function () {\n            this.writeToInput();\n\n            if (this.options.onUpdate && typeof this.options.onUpdate === \"function\") {\n                if (this.options.scope) {\n                    this.options.onUpdate.call(this.options.scope, this.result);\n                } else {\n                    this.options.onUpdate(this.result);\n                }\n            }\n        },\n\n\n\n\n        // =============================================================================================================\n        // Service methods\n\n        toggleInput: function () {\n            this.$cache.input.toggleClass(\"irs-hidden-input\");\n\n            if (this.has_tab_index) {\n                this.$cache.input.prop(\"tabindex\", -1);\n            } else {\n                this.$cache.input.removeProp(\"tabindex\");\n            }\n\n            this.has_tab_index = !this.has_tab_index;\n        },\n\n        /**\n         * Convert real value to percent\n         *\n         * @param value {Number} X in real\n         * @param no_min {boolean=} don't use min value\n         * @returns {Number} X in percent\n         */\n        convertToPercent: function (value, no_min) {\n            var diapason = this.options.max - this.options.min,\n                one_percent = diapason / 100,\n                val, percent;\n\n            if (!diapason) {\n                this.no_diapason = true;\n                return 0;\n            }\n\n            if (no_min) {\n                val = value;\n            } else {\n                val = value - this.options.min;\n            }\n\n            percent = val / one_percent;\n\n            return this.toFixed(percent);\n        },\n\n        /**\n         * Convert percent to real values\n         *\n         * @param percent {Number} X in percent\n         * @returns {Number} X in real\n         */\n        convertToValue: function (percent) {\n            var min = this.options.min,\n                max = this.options.max,\n                min_decimals = min.toString().split(\".\")[1],\n                max_decimals = max.toString().split(\".\")[1],\n                min_length, max_length,\n                avg_decimals = 0,\n                abs = 0;\n\n            if (percent === 0) {\n                return this.options.min;\n            }\n            if (percent === 100) {\n                return this.options.max;\n            }\n\n\n            if (min_decimals) {\n                min_length = min_decimals.length;\n                avg_decimals = min_length;\n            }\n            if (max_decimals) {\n                max_length = max_decimals.length;\n                avg_decimals = max_length;\n            }\n            if (min_length && max_length) {\n                avg_decimals = (min_length >= max_length) ? min_length : max_length;\n            }\n\n            if (min < 0) {\n                abs = Math.abs(min);\n                min = +(min + abs).toFixed(avg_decimals);\n                max = +(max + abs).toFixed(avg_decimals);\n            }\n\n            var number = ((max - min) / 100 * percent) + min,\n                string = this.options.step.toString().split(\".\")[1],\n                result;\n\n            if (string) {\n                number = +number.toFixed(string.length);\n            } else {\n                number = number / this.options.step;\n                number = number * this.options.step;\n\n                number = +number.toFixed(0);\n            }\n\n            if (abs) {\n                number -= abs;\n            }\n\n            if (string) {\n                result = +number.toFixed(string.length);\n            } else {\n                result = this.toFixed(number);\n            }\n\n            if (result < this.options.min) {\n                result = this.options.min;\n            } else if (result > this.options.max) {\n                result = this.options.max;\n            }\n\n            return result;\n        },\n\n        /**\n         * Round percent value with step\n         *\n         * @param percent {Number}\n         * @returns percent {Number} rounded\n         */\n        calcWithStep: function (percent) {\n            var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;\n\n            if (rounded > 100) {\n                rounded = 100;\n            }\n            if (percent === 100) {\n                rounded = 100;\n            }\n\n            return this.toFixed(rounded);\n        },\n\n        checkMinInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.min_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current < o.min_interval) {\n                    current = next - o.min_interval;\n                }\n\n            } else {\n\n                if (current - next < o.min_interval) {\n                    current = next + o.min_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkMaxInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.max_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current > o.max_interval) {\n                    current = next - o.max_interval;\n                }\n\n            } else {\n\n                if (current - next > o.max_interval) {\n                    current = next + o.max_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkDiapason: function (p_num, min, max) {\n            var num = this.convertToValue(p_num),\n                o = this.options;\n\n            if (typeof min !== \"number\") {\n                min = o.min;\n            }\n\n            if (typeof max !== \"number\") {\n                max = o.max;\n            }\n\n            if (num < min) {\n                num = min;\n            }\n\n            if (num > max) {\n                num = max;\n            }\n\n            return this.convertToPercent(num);\n        },\n\n        toFixed: function (num) {\n            num = num.toFixed(20);\n            return +num;\n        },\n\n        _prettify: function (num) {\n            if (!this.options.prettify_enabled) {\n                return num;\n            }\n\n            if (this.options.prettify && typeof this.options.prettify === \"function\") {\n                return this.options.prettify(num);\n            } else {\n                return this.prettify(num);\n            }\n        },\n\n        prettify: function (num) {\n            var n = num.toString();\n            return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + this.options.prettify_separator);\n        },\n\n        checkEdges: function (left, width) {\n            if (!this.options.force_edges) {\n                return this.toFixed(left);\n            }\n\n            if (left < 0) {\n                left = 0;\n            } else if (left > 100 - width) {\n                left = 100 - width;\n            }\n\n            return this.toFixed(left);\n        },\n\n        validate: function () {\n            var o = this.options,\n                r = this.result,\n                v = o.values,\n                vl = v.length,\n                value,\n                i;\n\n            if (typeof o.min === \"string\") o.min = +o.min;\n            if (typeof o.max === \"string\") o.max = +o.max;\n            if (typeof o.from === \"string\") o.from = +o.from;\n            if (typeof o.to === \"string\") o.to = +o.to;\n            if (typeof o.step === \"string\") o.step = +o.step;\n\n            if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\n            if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\n            if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\n            if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\n\n            if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\n\n            if (o.max < o.min) {\n                o.max = o.min;\n            }\n\n            if (vl) {\n                o.p_values = [];\n                o.min = 0;\n                o.max = vl - 1;\n                o.step = 1;\n                o.grid_num = o.max;\n                o.grid_snap = true;\n\n                for (i = 0; i < vl; i++) {\n                    value = +v[i];\n\n                    if (!isNaN(value)) {\n                        v[i] = value;\n                        value = this._prettify(value);\n                    } else {\n                        value = v[i];\n                    }\n\n                    o.p_values.push(value);\n                }\n            }\n\n            if (typeof o.from !== \"number\" || isNaN(o.from)) {\n                o.from = o.min;\n            }\n\n            if (typeof o.to !== \"number\" || isNaN(o.to)) {\n                o.to = o.max;\n            }\n\n            if (o.type === \"single\") {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n            } else {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n                if (o.to < o.min) o.to = o.min;\n                if (o.to > o.max) o.to = o.max;\n\n                if (this.update_check.from) {\n\n                    if (this.update_check.from !== o.from) {\n                        if (o.from > o.to) o.from = o.to;\n                    }\n                    if (this.update_check.to !== o.to) {\n                        if (o.to < o.from) o.to = o.from;\n                    }\n\n                }\n\n                if (o.from > o.to) o.from = o.to;\n                if (o.to < o.from) o.to = o.from;\n\n            }\n\n            if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\n                o.step = 1;\n            }\n\n            if (typeof o.from_min === \"number\" && o.from < o.from_min) {\n                o.from = o.from_min;\n            }\n\n            if (typeof o.from_max === \"number\" && o.from > o.from_max) {\n                o.from = o.from_max;\n            }\n\n            if (typeof o.to_min === \"number\" && o.to < o.to_min) {\n                o.to = o.to_min;\n            }\n\n            if (typeof o.to_max === \"number\" && o.from > o.to_max) {\n                o.to = o.to_max;\n            }\n\n            if (r) {\n                if (r.min !== o.min) {\n                    r.min = o.min;\n                }\n\n                if (r.max !== o.max) {\n                    r.max = o.max;\n                }\n\n                if (r.from < r.min || r.from > r.max) {\n                    r.from = o.from;\n                }\n\n                if (r.to < r.min || r.to > r.max) {\n                    r.to = o.to;\n                }\n            }\n\n            if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\n                o.min_interval = 0;\n            }\n\n            if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\n                o.max_interval = 0;\n            }\n\n            if (o.min_interval && o.min_interval > o.max - o.min) {\n                o.min_interval = o.max - o.min;\n            }\n\n            if (o.max_interval && o.max_interval > o.max - o.min) {\n                o.max_interval = o.max - o.min;\n            }\n        },\n\n        decorate: function (num, original) {\n            var decorated = \"\",\n                o = this.options;\n\n            if (o.prefix) {\n                decorated += o.prefix;\n            }\n\n            decorated += num;\n\n            if (o.max_postfix) {\n                if (o.values.length && num === o.p_values[o.max]) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                } else if (original === o.max) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                }\n            }\n\n            if (o.postfix) {\n                decorated += o.postfix;\n            }\n\n            return decorated;\n        },\n\n        updateFrom: function () {\n            this.result.from = this.options.from;\n            this.result.from_percent = this.convertToPercent(this.result.from);\n            this.result.from_pretty = this._prettify(this.result.from);\n            if (this.options.values) {\n                this.result.from_value = this.options.values[this.result.from];\n            }\n        },\n\n        updateTo: function () {\n            this.result.to = this.options.to;\n            this.result.to_percent = this.convertToPercent(this.result.to);\n            this.result.to_pretty = this._prettify(this.result.to);\n            if (this.options.values) {\n                this.result.to_value = this.options.values[this.result.to];\n            }\n        },\n\n        updateResult: function () {\n            this.result.min = this.options.min;\n            this.result.max = this.options.max;\n            this.updateFrom();\n            this.updateTo();\n        },\n\n\n        // =============================================================================================================\n        // Grid\n\n        appendGrid: function () {\n            if (!this.options.grid) {\n                return;\n            }\n\n            var o = this.options,\n                i, z,\n\n                total = o.max - o.min,\n                big_num = o.grid_num,\n                big_p = 0,\n                big_w = 0,\n\n                small_max = 4,\n                local_small_max,\n                small_p,\n                small_w = 0,\n\n                result,\n                html = '';\n\n\n\n            this.calcGridMargin();\n\n            if (o.grid_snap) {\n                big_num = total / o.step;\n            }\n\n            if (big_num > 50) big_num = 50;\n            big_p = this.toFixed(100 / big_num);\n\n            if (big_num > 4) {\n                small_max = 3;\n            }\n            if (big_num > 7) {\n                small_max = 2;\n            }\n            if (big_num > 14) {\n                small_max = 1;\n            }\n            if (big_num > 28) {\n                small_max = 0;\n            }\n\n            for (i = 0; i < big_num + 1; i++) {\n                local_small_max = small_max;\n\n                big_w = this.toFixed(big_p * i);\n\n                if (big_w > 100) {\n                    big_w = 100;\n                }\n                this.coords.big[i] = big_w;\n\n                small_p = (big_w - (big_p * (i - 1))) / (local_small_max + 1);\n\n                for (z = 1; z <= local_small_max; z++) {\n                    if (big_w === 0) {\n                        break;\n                    }\n\n                    small_w = this.toFixed(big_w - (small_p * z));\n\n                    html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\n                }\n\n                html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\n\n                result = this.convertToValue(big_w);\n                if (o.values.length) {\n                    result = o.p_values[result];\n                } else {\n                    result = this._prettify(result);\n                }\n\n                html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\n            }\n            this.coords.big_num = Math.ceil(big_num + 1);\n\n\n\n            this.$cache.cont.addClass(\"irs-with-grid\");\n            this.$cache.grid.html(html);\n            this.cacheGridLabels();\n        },\n\n        cacheGridLabels: function () {\n            var $label, i,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                $label = this.$cache.grid.find(\".js-grid-text-\" + i);\n                this.$cache.grid_labels.push($label);\n            }\n\n            this.calcGridLabels();\n        },\n\n        calcGridLabels: function () {\n            var i, label, start = [], finish = [],\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(false);\n                this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100);\n                this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2);\n\n                start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]);\n                finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);\n            }\n\n            if (this.options.force_edges) {\n                if (start[0] < -this.coords.grid_gap) {\n                    start[0] = -this.coords.grid_gap;\n                    finish[0] = this.toFixed(start[0] + this.coords.big_p[0]);\n\n                    this.coords.big_x[0] = this.coords.grid_gap;\n                }\n\n                if (finish[num - 1] > 100 + this.coords.grid_gap) {\n                    finish[num - 1] = 100 + this.coords.grid_gap;\n                    start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]);\n\n                    this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap);\n                }\n            }\n\n            this.calcGridCollision(2, start, finish);\n            this.calcGridCollision(4, start, finish);\n\n            for (i = 0; i < num; i++) {\n                label = this.$cache.grid_labels[i][0];\n\n                if (this.coords.big_x[i] !== Number.POSITIVE_INFINITY) {\n                    label.style.marginLeft = -this.coords.big_x[i] + \"%\";\n                }\n            }\n        },\n\n        // Collisions Calc Beta\n        // TODO: Refactor then have plenty of time\n        calcGridCollision: function (step, start, finish) {\n            var i, next_i, label,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i += step) {\n                next_i = i + (step / 2);\n                if (next_i >= num) {\n                    break;\n                }\n\n                label = this.$cache.grid_labels[next_i][0];\n\n                if (finish[i] <= start[next_i]) {\n                    label.style.visibility = \"visible\";\n                } else {\n                    label.style.visibility = \"hidden\";\n                }\n            }\n        },\n\n        calcGridMargin: function () {\n            if (!this.options.grid_margin) {\n                return;\n            }\n\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n            this.coords.p_handle = this.toFixed(this.coords.w_handle  / this.coords.w_rs * 100);\n            this.coords.grid_gap = this.toFixed((this.coords.p_handle / 2) - 0.1);\n\n            this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + \"%\";\n            this.$cache.grid[0].style.left = this.coords.grid_gap + \"%\";\n        },\n\n\n\n        // =============================================================================================================\n        // Public methods\n\n        update: function (options) {\n            if (!this.input) {\n                return;\n            }\n\n            this.is_update = true;\n\n            this.options.from = this.result.from;\n            this.options.to = this.result.to;\n            this.update_check.from = this.result.from;\n            this.update_check.to = this.result.to;\n\n            this.options = $.extend(this.options, options);\n            this.validate();\n            this.updateResult(options);\n\n            this.toggleInput();\n            this.remove();\n            this.init(true);\n        },\n\n        reset: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.updateResult();\n            this.update();\n        },\n\n        destroy: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.toggleInput();\n            this.$cache.input.prop(\"readonly\", false);\n            $.data(this.input, \"ionRangeSlider\", null);\n\n            this.remove();\n            this.input = null;\n            this.options = null;\n        }\n    };\n\n    $.fn.ionRangeSlider = function (options) {\n        return this.each(function() {\n            if (!$.data(this, \"ionRangeSlider\")) {\n                $.data(this, \"ionRangeSlider\", new IonRangeSlider(this, options, plugin_count++));\n            }\n        });\n    };\n\n\n\n    // =================================================================================================================\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n    // MIT license\n\n    (function() {\n        var lastTime = 0;\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                || window[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = function(callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n\n        if (!window.cancelAnimationFrame)\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n    }());\n\n}));\n"],"sourceRoot":""}